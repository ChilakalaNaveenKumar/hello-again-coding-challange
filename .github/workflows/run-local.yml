name: Run Local Script and Expose Backend with Cloudflare Tunnel

on:
  push:
    branches: [ main ]

jobs:
  run-backend:
    runs-on: ubuntu-latest
    env:
      DEBUG: "True"
      CI: "true"

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python 3.13.3
      uses: actions/setup-python@v4
      with:
        python-version: 3.13.3

    - name: Make script executable
      run: chmod +x ./run_local.sh

    - name: Remove runserver call if present
      run: sed -i '/runserver/d' ./run_local.sh

    - name: Run backend setup
      run: ./run_local.sh

    - name: Start Django server in background
      run: nohup python manage.py runserver 0.0.0.0:8000 > django.log 2>&1 &

    - name: Install Cloudflared
      run: |
        curl -L https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -o cloudflared
        chmod +x cloudflared
        sudo mv cloudflared /usr/local/bin/cloudflared

    - name: Write tunnel credentials safely
      run: |
        echo "${{ secrets.CLOUDFLARED_CRED_JSON }}" | jq '.' > tunnel.json

    - name: Create Cloudflare Tunnel config
      run: |
        echo 'tunnel: c38e0a6f-1e13-40ba-958e-913e1c2c4a50' > config.yml
        echo 'credentials-file: ./tunnel.json' >> config.yml
        echo 'ingress:' >> config.yml
        echo '  - hostname: api.digi-setu.com' >> config.yml
        echo '    service: http://localhost:8000' >> config.yml
        echo '  - service: http_status:404' >> config.yml

    - name: Start Cloudflare Tunnel
      run: |
        nohup cloudflared tunnel --config config.yml run > tunnel.log 2>&1 &
        sleep 5
        echo "✅ Backend exposed at https://api.digi-setu.com"
        echo "🪵 Tunnel logs:"
        cat tunnel.log || echo "No logs found"

    - name: Keep workflow alive for testing
      run: |
        echo "🌐 Cloudflare Tunnel live. Cancel manually when done."
        while true; do sleep 30; done
